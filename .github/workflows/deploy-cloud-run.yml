name: Deploy Cloud Run (KnowingMindSuite)

on:
  push:
    branches: [ main ]
    paths:
      - "services/**"
      - ".github/workflows/deploy-cloud-run.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    # === แก้ค่าตามโปรเจกต์ของคุณ ===
    env:
      GCP_PROJECT_ID: knowing-mind-app
      GCP_REGION: asia-southeast1
      ARTIFACT_REPO: run   # ชื่อ repo ใน Artifact Registry (ประเภท docker)
      # WIF settings (มีอยู่แล้วตามบันทึก)
      WIF_PROVIDER: projects/610232224779/locations/global/workloadIdentityPools/github-pool/providers/github-provider
      WIF_SERVICE_ACCOUNT: cicd-deployer@knowing-mind-app.iam.gserviceaccount.com

    strategy:
      fail-fast: false
      matrix:
        include:
          # ── Public services ─────────────────────────────────────────────
          - name: arunroo-ics
            path: services/arunroo-ics
            ping: /api/ping
            public: "true"
          - name: satishift-webhook
            path: services/satishift-webhook
            ping: /api/ping
            public: "true"

          # ── Internal service (ไม่มี ping สาธารณะ) ──────────────────────
          - name: kma-api
            path: services/kma-api
            ping: /api/ping
            public: "false"

          # (ตัวเลือกเสริม ถ้ามี)
          # - name: satishift-fullstack
          #   path: SatiShiftApp/fullstack_node_ts
          #   ping: /health
          #   public: "true"

    permissions:
      contents: 'read'
      id-token: 'write'   # จำเป็นสำหรับ WIF

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Auth to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WIF_PROVIDER }}
          service_account: ${{ env.WIF_SERVICE_ACCOUNT }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Print gcloud info
        run: |
          gcloud --version
          gcloud config set project "${GCP_PROJECT_ID}"
          gcloud config set run/region "${GCP_REGION}"

      # Build & Deploy (Cloud Buildpacks via --source)
      - name: Deploy ${{ matrix.name }}
        working-directory: ${{ matrix.path }}
        run: |
          echo "Deploying service: ${{ matrix.name }} from $PWD"

          # หมายเหตุ: ห้ามตั้งค่า PORT เองเมื่อใช้ buildpacks
          gcloud run deploy "${{ matrix.name }}" \
            --source . \
            --region "${GCP_REGION}" \
            --project "${GCP_PROJECT_ID}" \
            --quiet

          # ตั้งนโยบายการเข้าถึง (public หรือไม่)
          if [ "${{ matrix.public }}" = "true" ]; then
            gcloud run services add-iam-policy-binding "${{ matrix.name }}" \
              --region "${GCP_REGION}" \
              --member="allUsers" \
              --role="roles/run.invoker" \
              --quiet
          else
            echo "Skipping public IAM for internal service: ${{ matrix.name }}"
          fi

      # Smoke test (เฉพาะ public)
      - name: Smoke test (public) ${{ matrix.name }}
        if: ${{ matrix.public == 'true' }}
        run: |
          set -e
          URL=$(gcloud run services describe "${{ matrix.name }}" \
            --region "${GCP_REGION}" \
            --format="value(status.url)")
          echo "Service URL: $URL"

          # ใช้ /api/ping หรือ /health ตาม matrix.ping
          curl -fsS "${URL}${{ matrix.ping }}" -m 15 -w "\nHTTP %{http_code}\n"

      # สำหรับ internal service (เช่น kma-api) — ข้ามการยิงจาก public
      - name: Note for internal service
        if: ${{ matrix.public != 'true' }}
        run: |
          echo "Internal service '${{ matrix.name }}' deployed."
          echo "Add an internal smoke test later (Workflows/Scheduler with OIDC) if needed."
