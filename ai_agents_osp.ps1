# ai_agents_osp.ps1 ‚Äî One-Shot PowerShell (‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î)
# ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ä‡∏∏‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ 12 Agents ‚Üî ‡∏Ç‡∏±‡∏ô‡∏ò‡πå‡∏´‡πâ‡∏≤ ‚Üî ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó + ZIP + ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö
# ‡πÉ‡∏ä‡πâ‡πÑ‡∏î‡πâ‡∏ö‡∏ô Windows PowerShell/Terminal ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡∏≠‡∏∞‡πÑ‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°

$ErrorActionPreference = "Stop"
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

$Root = Join-Path $HOME "ai_agents_bundle"
$Zip  = Join-Path $HOME "ai_agents_bundle.zip"
$ZipV = Join-Path $HOME "ai_agents_bundle_v1.zip"

function Say($m, $c="Cyan"){ Write-Host ">>> $m" -ForegroundColor $c }

# 0) ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå
if (!(Test-Path $Root)) { New-Item -ItemType Directory -Force -Path $Root | Out-Null }

# 1) README.md
@"
# AI Agents & ‡∏Ç‡∏±‡∏ô‡∏ò‡πå‡∏´‡πâ‡∏≤ (Samsara Pack)

‡∏ä‡∏∏‡∏î‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡∏ñ‡∏≤‡∏õ‡∏±‡∏ï‡∏¢‡πå AI ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö **‡∏Ç‡∏±‡∏ô‡∏ò‡πå 5** ‡πÅ‡∏•‡∏∞‡∏ß‡∏á‡∏à‡∏£ **‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó**:
- `roadmap.md` ‚Äî ‡πÇ‡∏£‡∏î‡πÅ‡∏°‡∏õ 1‚Äì3‚Äì6 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô (‡∏à‡∏≤‡∏Å 5 ‚Üí 8 ‚Üí 12 agents)
- `agents_table.md` ‚Äî ‡∏ï‡∏≤‡∏£‡∏≤‡∏á 12 Agents: ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà, ‡∏•‡∏≥‡∏î‡∏±‡∏ö, ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó
- `agents_flow.mmd` ‚Äî ‡∏ú‡∏±‡∏á Mermaid (‡∏î‡∏π‡∏ö‡∏ô GitHub/VS Code/Obsidian)
- `cycle_diagram.svg` ‚Äî ‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û‡∏ß‡∏á‡∏Å‡∏•‡∏° (‡∏ß‡∏≤‡∏î‡∏î‡πâ‡∏ß‡∏¢ SVG ‡∏ï‡∏£‡∏á ‡πÜ)
"@ | Set-Content "$Root\README.md" -Encoding UTF8

# 2) roadmap.md
@"
# üìÖ Roadmap AI Agents ‚Üî ‡∏Ç‡∏±‡∏ô‡∏ò‡πå‡∏´‡πâ‡∏≤

## ‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô (MVP 5 ‡∏ï‡∏±‡∏ß)
- ‡∏£‡∏π‡∏õ: Cloud Run, Firestore, Pub/Sub, Scheduler
- ‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤: manual feedback/logs
- ‡∏™‡∏±‡∏ç‡∏ç‡∏≤: Firestore + Sheets + Docs
- ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£: GPT + n8n
- ‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì: NLP (‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)

## ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà 1 ‚Äî ‡πÄ‡∏™‡∏£‡∏¥‡∏°‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤+‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
- Feedback Agent (‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤): metrics (success/fail, latency, CTR, completion, donation)
- Orchestrator Agent (‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£): route, retry, fallback (n8n/Workflows)

## ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà 3 ‚Äî 8 Agents ‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô
- Memory Agent (‡∏™‡∏±‡∏ç‡∏ç‡∏≤)
- Tool Executor (‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£)
- Safety & Policy Guard (‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤+‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£)
- Quality & Eval Lab (‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤)
- DataOps/Monitor (‡∏£‡∏π‡∏õ)

## ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà 6 ‚Äî 12 Agents (‡∏≠‡∏á‡∏Ñ‡πå‡∏Å‡∏£)
- Multimodal Perception (‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì)
- Persona/Profile Manager (‡∏™‡∏±‡∏ç‡∏ç‡∏≤)
- Observability & Cost Controller (‡∏£‡∏π‡∏õ)
- Scheduler & Event Bus (‡∏£‡∏π‡∏õ)
"@ | Set-Content "$Root\roadmap.md" -Encoding UTF8

# 3) agents_table.md
@"
# üß© 12 AI Agents ‚Üî ‡∏Ç‡∏±‡∏ô‡∏ò‡πå‡∏´‡πâ‡∏≤ ‚Üî ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó

| # | Agent | ‡∏Ç‡∏±‡∏ô‡∏ò‡πå | ‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡∏´‡∏•‡∏±‡∏Å | ‡∏•‡∏≥‡∏î‡∏±‡∏ö | ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó |
|---|-------|-------|-------------|-------|---------------|
| 1 | Scheduler & Event Bus | ‡∏£‡∏π‡∏õ | trigger event/pub-sub | 1 | ‡∏≠‡∏ß‡∏¥‡∏ä‡∏ä‡∏≤ ‚Üí ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ |
| 2 | Perception Hub | ‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì | ‡∏£‡∏±‡∏ö‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°/‡∏™‡∏±‡∏ç‡∏ç‡∏≤‡∏ì | 2 | ‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì |
| 3 | Multimodal Perception | ‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì | STT/OCR/‡∏†‡∏≤‡∏û/‡∏ß‡∏¥‡∏î‡∏µ‡πÇ‡∏≠ | 3 | ‡∏ô‡∏≤‡∏°‡∏£‡∏π‡∏õ |
| 4 | Memory & Knowledge | ‡∏™‡∏±‡∏ç‡∏ç‡∏≤ | context/knowledge | 4 | ‡∏™‡∏±‡∏ç‡∏ç‡∏≤ |
| 5 | Persona/Profile Manager | ‡∏™‡∏±‡∏ç‡∏ç‡∏≤ | ‡πÇ‡∏ó‡∏ô/‡∏ö‡∏∏‡∏Ñ‡∏•‡∏¥‡∏Å/‡πÅ‡∏ö‡∏£‡∏ô‡∏î‡πå | 5 | ‡∏≠‡∏∏‡∏õ‡∏≤‡∏ó‡∏≤‡∏ô |
| 6 | Reasoner & Planner | ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ | ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå/‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô | 6 | ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ |
| 7 | Tool/Action Executor | ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ | ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏°‡∏∑‡∏≠‡∏à‡∏£‡∏¥‡∏á | 7 | ‡∏†‡∏û |
| 8 | Workflow Orchestrator | ‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ | ‡∏Ñ‡∏∏‡∏°‡∏•‡∏≥‡∏î‡∏±‡∏ö/retry | 8 | ‡∏ä‡∏≤‡∏ï‡∏¥ |
| 9 | Feedback & Preference | ‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤ | ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏î‡∏µ/‡πÅ‡∏¢‡πà | 9 | ‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤ |
|10 | Safety & Policy Guard | ‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤+‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£ | PDPA/Content/RBAC/Quota | 10 | ‡∏ï‡∏±‡∏ì‡∏´‡∏≤/‡∏ß‡∏¥‡∏†‡∏ß‡∏ï‡∏±‡∏ì‡∏´‡∏≤ |
|11 | Quality & Eval Lab | ‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤ | golden set/regression | 11 | ‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì+‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤ |
|12 | Observability & Cost Ctrl | ‡∏£‡∏π‡∏õ | metrics/logs/cost alert | 12 | ‡∏ä‡∏£‡∏≤‚Äì‡∏°‡∏£‡∏ì‡∏∞ |
"@ | Set-Content "$Root\agents_table.md" -Encoding UTF8

# 4) agents_flow.mmd
@"
flowchart LR
  SCH[Scheduler (‡∏≠‡∏ß‡∏¥‡∏ä‡∏ä‡∏≤)] --> PER[Perception (‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì)]
  PER --> MMP[Multimodal (‡∏ô‡∏≤‡∏°‡∏£‡∏π‡∏õ)]
  MMP --> MEM[Memory (‡∏™‡∏±‡∏ç‡∏ç‡∏≤)]
  MEM --> PERM[Persona (‡∏≠‡∏∏‡∏õ‡∏≤‡∏ó‡∏≤‡∏ô)]
  PERM --> RSN[Reasoner (‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£)]
  RSN --> EXE[Executor (‡∏†‡∏û)]
  EXE --> ORC[Orchestrator (‡∏ä‡∏≤‡∏ï‡∏¥)]
  ORC --> FDB[Feedback (‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤)]
  FDB --> SAF[Safety (‡∏ï‡∏±‡∏ì‡∏´‡∏≤)]
  SAF --> QAL[Quality (‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô)]
  QAL --> OBS[Observability (‡∏ä‡∏£‡∏≤-‡∏°‡∏£‡∏ì‡∏∞)]
  OBS --> SCH
"@ | Set-Content "$Root\agents_flow.mmd" -Encoding UTF8

# 5) cycle_diagram.svg (Samsara-like)
@"
<?xml version='1.0' encoding='UTF-8'?>
<svg width='1200' height='1200' viewBox='0 0 1200 1200' xmlns='http://www.w3.org/2000/svg'>
  <defs>
    <marker id='arrow' markerWidth='12' markerHeight='12' refX='10' refY='6' orient='auto'>
      <path d='M0,0 L12,6 L0,12 z' fill='#333'/>
    </marker>
    <style>
      .node { fill:#E0F7FA; stroke:#1890a0; stroke-width:2; rx:18; ry:18; }
      .edge { stroke:#333; stroke-width:2; fill:none; marker-end:url(#arrow); }
      .label { font-family: sans-serif; font-size: 16px; fill:#111; }
      .title { font-family: sans-serif; font-size: 28px; font-weight: bold; fill:#111; }
      .subtitle { font-family: sans-serif; font-size: 16px; fill:#444; }
    </style>
  </defs>
  <text x='600' y='70' text-anchor='middle' class='title'>‡∏ß‡∏á‡∏à‡∏£ 12 Agents ‚Üî ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó (Samsara-like)</text>
  <text x='600' y='96' text-anchor='middle' class='subtitle'>Scheduler ‚Üí Perception ‚Üí Memory ‚Üí Reasoner ‚Üí Executor ‚Üí Orchestrator ‚Üí Feedback ‚Üí Safety ‚Üí Quality ‚Üí Observability ‚Üí Scheduler</text>
  <circle cx='600' cy='620' r='480' fill='none' stroke='#ddd' stroke-width='2'/>
  <!-- 12 ‡∏Å‡∏•‡πà‡∏≠‡∏á‡∏£‡∏≠‡∏ö‡∏ß‡∏á -->
  <rect class='node' x='520' y='120' width='160' height='70'/><text class='label' x='600' y='145' text-anchor='middle'>Scheduler / Event</text><text class='label' x='600' y='167' text-anchor='middle'>(‡∏≠‡∏ß‡∏¥‡∏ä‡∏ä‡∏≤)</text>
  <rect class='node' x='760' y='170' width='180' height='70'/><text class='label' x='850' y='195' text-anchor='middle'>Perception Hub</text><text class='label' x='850' y='217' text-anchor='middle'>(‡∏ß‡∏¥‡∏ç‡∏ç‡∏≤‡∏ì)</text>
  <rect class='node' x='930' y='310' width='190' height='70'/><text class='label' x='1025' y='335' text-anchor='middle'>Multimodal</text><text class='label' x='1025' y='357' text-anchor='middle'>(‡∏ô‡∏≤‡∏°‡∏£‡∏π‡∏õ)</text>
  <rect class='node' x='1010' y='500' width='170' height='70'/><text class='label' x='1095' y='525' text-anchor='middle'>Memory/Knowledge</text><text class='label' x='1095' y='547' text-anchor='middle'>(‡∏™‡∏±‡∏ç‡∏ç‡∏≤)</text>
  <rect class='node' x='960' y='700' width='180' height='70'/><text class='label' x='1050' y='725' text-anchor='middle'>Persona/Profile</text><text class='label' x='1050' y='747' text-anchor='middle'>(‡∏≠‡∏∏‡∏õ‡∏≤‡∏ó‡∏≤‡∏ô)</text>
  <rect class='node' x='770' y='850' width='180' height='70'/><text class='label' x='860' y='875' text-anchor='middle'>Reasoner/Planner</text><text class='label' x='860' y='897' text-anchor='middle'>(‡∏™‡∏±‡∏á‡∏Ç‡∏≤‡∏£)</text>
  <rect class='node' x='520' y='900' width='160' height='70'/><text class='label' x='600' y='925' text-anchor='middle'>Tool / Executor</text><text class='label' x='600' y='947' text-anchor='middle'>(‡∏†‡∏û)</text>
  <rect class='node' x='300' y='850' width='180' height='70'/><text class='label' x='390' y='875' text-anchor='middle'>Orchestrator</text><text class='label' x='390' y='897' text-anchor='middle'>(‡∏ä‡∏≤‡∏ï‡∏¥)</text>
  <rect class='node' x='130' y='700' width='190' height='70'/><text class='label' x='225' y='725' text-anchor='middle'>Feedback/Preference</text><text class='label' x='225' y='747' text-anchor='middle'>(‡πÄ‡∏ß‡∏ó‡∏ô‡∏≤)</text>
  <rect class='node' x='60' y='500' width='190' height='70'/><text class='label' x='155' y='525' text-anchor='middle'>Safety/Policy Guard</text><text class='label' x='155' y='547' text-anchor='middle'>(‡∏ï‡∏±‡∏ì‡∏´‡∏≤)</text>
  <rect class='node' x='80' y='310' width='180' height='70'/><text class='label' x='170' y='335' text-anchor='middle'>Quality & Eval</text><text class='label' x='170' y='357' text-anchor='middle'>(‡∏õ‡∏£‡∏∞‡πÄ‡∏°‡∏¥‡∏ô)</text>
  <rect class='node' x='280' y='170' width='190' height='70'/><text class='label' x='375' y='195' text-anchor='middle'>Observability / Cost</text><text class='label' x='375' y='217' text-anchor='middle'>(‡∏ä‡∏£‡∏≤-‡∏°‡∏£‡∏ì‡∏∞)</text>
  <!-- ‡πÄ‡∏™‡πâ‡∏ô‡∏•‡∏π‡∏Å‡∏®‡∏£ -->
  <path class='edge' d='M600,190 C640,210 710,210 760,205' />
  <path class='edge' d='M940,205 C980,220 1000,255 1025,310' />
  <path class='edge' d='M1025,380 C1060,430 1090,460 1095,500' />
  <path class='edge' d='M1095,570 C1085,620 1080,660 1050,700' />
  <path class='edge' d='M960,735 C920,770 900,820 860,850' />
  <path class='edge' d='M860,920 C800,940 700,945 680,935' />
  <path class='edge' d='M520,935 C480,940 430,925 390,895' />
  <path class='edge' d='M300,885 C260,870 230,820 225,770' />
  <path class='edge' d='M225,700 C215,660 200,610 155,570' />
  <path class='edge' d='M155,500 C150,460 150,420 170,380' />
  <path class='edge' d='M170,310 C210,250 270,225 330,205' />
  <path class='edge' d='M470,205 C520,205 560,190 600,190' />
</svg>
"@ | Set-Content "$Root\cycle_diagram.svg" -Encoding UTF8

# 6) baseline marker
@"
# ü™∑ AI Agents Baseline v1 (2025-09-11)
- Design Pack: AI Agents ‚Üî ‡∏Ç‡∏±‡∏ô‡∏ò‡πå‡∏´‡πâ‡∏≤ ‚Üî ‡∏õ‡∏è‡∏¥‡∏à‡∏à‡∏™‡∏°‡∏∏‡∏õ‡∏ö‡∏≤‡∏ó
- ‡∏£‡∏ß‡∏°‡πÑ‡∏ü‡∏•‡πå: README.md, roadmap.md, agents_table.md, agents_flow.mmd, cycle_diagram.svg
- ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô baseline ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á‡∏ï‡πà‡∏≠‡∏¢‡∏≠‡∏î‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡∏±‡∏î‡πÑ‡∏õ
"@ | Set-Content "$Root\agents_baseline_v1.md" -Encoding UTF8

# 7) ‡∏™‡∏£‡πâ‡∏≤‡∏á ZIP (latest) ‡πÅ‡∏•‡∏∞ ZIP ‡∏£‡∏∏‡πà‡∏ô v1
if (Test-Path $Zip) { Remove-Item $Zip -Force }
Compress-Archive -Path "$Root\*" -DestinationPath $Zip
if (Test-Path $ZipV) { Remove-Item $ZipV -Force }
Copy-Item $Zip $ZipV

# 8) VERIFY ‚Äî ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô
$req = @("README.md","roadmap.md","agents_table.md","agents_flow.mmd","cycle_diagram.svg","agents_baseline_v1.md")
$missing = @()
foreach($f in $req){
  if(Test-Path (Join-Path $Root $f)){ Say "‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå: $f" "Green" } else { Say "‡∏Ç‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå: $f" "Red"; $missing += $f }
}
if(Test-Path $Zip){ Say "‡∏û‡∏ö ZIP: $Zip" "Green" } else { Say "‡πÑ‡∏°‡πà‡∏û‡∏ö ZIP: $Zip" "Red" }
if(Test-Path $ZipV){ Say "‡∏û‡∏ö ZIP (v1): $ZipV" "Green" } else { Say "‡πÑ‡∏°‡πà‡∏û‡∏ö ZIP (v1): $ZipV" "Red" }

# keyword check
if(Select-String -Quiet -Pattern "Roadmap AI Agents" -Path "$Root\roadmap.md"){ Say "roadmap.md: OK keyword" "Green" } else { Say "roadmap.md: missing keyword" "Yellow" }
if(Select-String -Quiet -Pattern "12 AI Agents" -Path "$Root\agents_table.md"){ Say "agents_table.md: OK keyword" "Green" } else { Say "agents_table.md: missing keyword" "Yellow" }
if(Select-String -Quiet -Pattern "flowchart" -Path "$Root\agents_flow.mmd"){ Say "agents_flow.mmd: OK mermaid" "Green" } else { Say "agents_flow.mmd: missing mermaid" "Yellow" }

Say "‡∏™‡∏£‡πâ‡∏≤‡∏á bundle ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß:" "Cyan"
Say (" - Folder: {0}" -f $Root) "Cyan"
Say (" - Zip:    {0}" -f $Zip) "Cyan"
Say (" - Zip v1: {0}" -f $ZipV) "Cyan"
